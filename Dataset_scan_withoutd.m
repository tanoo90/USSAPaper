clc
clear
kcon=15;
wcon=10;
rcon=5;
ser=1000;
n=6;
for x=1:7
    per=280+(x-4)*28;
for v=1:100
    
%% Import data from text file.
% Script for importing data from the following text file:
%
%    D:\semaster1\ADV. Network\Articles\Joint Service Placement & Request Schadouling\Matlab_Cods\Data_set\1.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2020/01/12 23:24:34
Data_set=zeros(49367,4,per);
F=randperm(536,per);
for i = 1:per
%% Initialize variables.
filename = ['Data_set\1 (', num2str(F(1,i)), ').txt'];
delimiter = ' ';

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID(i) = fopen(filename,'r'); %#ok<*SAGROW>

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID(i), formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID(i));

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
Untitled = [dataArray{1:end-1}];
Z=size(Untitled);
for k=1:Z(1,1)
    for l=1:Z(1,2)
        Data_set(k,l,i)=Untitled(k,l);
    end
end

%% Clear temporary variables

end
clearvars filename delimiter formatSpec fileID dataArray ans i k l Z;
%„‘Œ’ ò—œ‰ ÿÊ· —òÊ—œÂ«? «Ê·?‰  «ò”? œ— „« —?” œ? « ” 
for i=1:49367
    if Data_set(i,1,1)==0
        data1=i-1;
        break
    elseif i==49367
        data1=i;
    else
        continue
    end
end
%«‰ Œ«» ò—œ‰ —‰œÊ„ ?ò “„«‰ «“ «Ê·?‰  «ò”?
timeselect=Data_set(randi([1 data1]),4,1);
%–Œ?—Â ò—œ‰ „Êﬁ⁄? Â«? Â—  «ò”? œ— »«“Â “„«‰? +-300 À«‰?Â ÕÊ· “„«‰ «‰ Œ«» ‘œÂ.
for i=1:per
    for j=1:49367
        Temp(1,j)=abs(Data_set(j,4,i)-timeselect);
    end
    m=min(Temp);
    if m<300
         d=find(Temp==m);
        for l=1:3
            User(i,l)=Data_set(d(1,1),l,i);
        end            
    end  
end
S=size(User);
t=1;
%Õ–› ò«—»—«‰ »?‘ «“ 300 À«‰?Â »œÊ‰ «— »«ÿ
for i=1:S(1,1)
    if User(i,1)==0
        continue
        
    end
    UF(t,:)=User(i,:);
        t=t+1;
end
load Tower.mat

%«‰ Œ«» —‰œÊ„ ¬‰ Â«
R=randperm(81,n);
for i=1:n
   BTS(i,:)=Tower(R(1,i),:);
end

clearvars timeselect data1 Data_set i j l d Temp m t S Untitled User R Tower F;

%«‰ Œ«» ”—Ê?”Â«? Â— BTS »« «” ›«œÂ «“  Ê“?⁄ “?›
for i=1:rcon
    BTS_Ser(i,:)=zipf(ser,0.6,n);
    uniqBTS_ser=unique(BTS_Ser(i,:));
    if sum(uniqBTS_ser)~=sum(BTS_Ser(i,:))
        BTS_Ser(i,:)=zipf(ser,0.6,n);
    end
end

%œ«œ‰ œ—ŒÊ«”  Â— ?Ê“— »« «” ›«œÂ «“  Ê“?⁄ “?›
for i=1:size(UF,1)
    if UF(i,3)==1
        UF(i,5)=zipf(ser,0.6);
    end
end

%„Õ«”»Â ›«’·Â ?Ê“—Â«  « Â— BTS»— Õ”» KM
for i=1:size(UF,1)
    for j=1:n
        Disd(i,j)=111.32*sqrt((UF(i,1)-BTS(j,1))^2+(UF(i,2)-BTS(j,2))^2); %#ok<*AGROW>
        
    %·Õ«Ÿ ò—œ‰ ‘—«?ÿ »—œ BTS òÂ »—«”«” «⁄·«„ ‘—ò  Comtel ¬‰ ‰Â«? BTS «?‰
    %‘—ò  œ— „‰«ÿﬁ ‘Â—? 2 «·? 5 ò?·Ê„ — »—œ œ«—‰œ

        %if Dis(i,j)<=5
        %    Disd(i,j)=Dis(i,j);
        %end
    end
end
%if size(Disd,1)<size(Dis,1)
%    Disd(size(Disd,1)+1,:)=0; 
%end

 F_mat=zeros(kcon,4,n);
[Matrix,S]=user_schadual(UF,n,F_mat,wcon,rcon,Disd,BTS_Ser);
Answer(1,v)=size(S,2);
clear var BTS BTS_Ser d data1 Data_set Disd F F_mat i j l m Matrix S t Temp timeselect UF Untitled User Dis Disd;
end
Finalwd(x,1)=per;
Finalwd(x,2)=(x-4)*10;
Finalwd(x,3)=mean(Answer);
end
for i=1:x
    Finalwd(i,4)=Finalwd(i,3)/Finalwd(i,1)*100;
end
max(Finalwd(:,4))
